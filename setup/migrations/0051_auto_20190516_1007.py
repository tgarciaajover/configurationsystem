# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-05-16 15:07
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('setup', '0050_machinehostsystem_tiempo_refresco'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_dane_code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=60, null=True)),
            ],
            options={
                'verbose_name': 'Departament',
                'verbose_name_plural': 'Departaments',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('valid_start_date', models.DateField(auto_now_add=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=200)),
                ('rol', models.CharField(blank=True, choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_email_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Emails',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('valid_start_date', models.DateField(blank=True, editable=False)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=200)),
                ('rol', models.CharField(blank=True, choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical email',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOperator',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(max_length=120)),
                ('second_name', models.CharField(blank=True, max_length=120, null=True)),
                ('other_names', models.CharField(blank=True, max_length=120, null=True)),
                ('surname', models.CharField(max_length=120)),
                ('second_last_name', models.CharField(blank=True, max_length=120, null=True)),
                ('other_surnames', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(max_length=200)),
                ('address', models.CharField(max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=150)),
                ('identification_type', models.CharField(blank=True, choices=[('C', 'Cedula'), ('P', 'Pasaporte'), ('E', 'Cedula de Extranjeria'), ('T', 'Tarjeta de Identidad'), ('U', 'Registro Civil'), ('D', 'Carnet Diplomatico'), ('O', 'TI2')], max_length=2, null=True)),
                ('identification', models.CharField(blank=True, max_length=20, null=True)),
                ('active_account', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical operator',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('country_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(max_length=1)),
                ('number', models.CharField(max_length=10)),
                ('rol', models.CharField(blank=True, choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical phone',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalThirdParty',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('visible_name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical third party',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='MachineOperator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_compania', models.CharField(max_length=60)),
                ('id_sede', models.CharField(max_length=60)),
                ('id_planta', models.CharField(max_length=60)),
                ('id_grupo_maquina', models.CharField(max_length=60)),
                ('id_maquina', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality_dane_code', models.CharField(max_length=5, null=True)),
                ('name', models.CharField(max_length=60, null=True)),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departament', to='setup.Department')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=120)),
                ('second_name', models.CharField(blank=True, max_length=120, null=True)),
                ('other_names', models.CharField(blank=True, max_length=120, null=True)),
                ('surname', models.CharField(max_length=120)),
                ('second_last_name', models.CharField(blank=True, max_length=120, null=True)),
                ('other_surnames', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(max_length=200)),
                ('address', models.CharField(max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=150)),
                ('identification_type', models.CharField(blank=True, choices=[('C', 'Cedula'), ('P', 'Pasaporte'), ('E', 'Cedula de Extranjeria'), ('T', 'Tarjeta de Identidad'), ('U', 'Registro Civil'), ('D', 'Carnet Diplomatico'), ('O', 'TI2')], max_length=2, null=True)),
                ('identification', models.CharField(blank=True, max_length=20, null=True)),
                ('active_account', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_operator_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_operator_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('country_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(max_length=1)),
                ('number', models.CharField(max_length=10)),
                ('rol', models.CharField(blank=True, choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_phone_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('visible_name', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_thirdparty_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_thirdparty_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UrbanDirectionColombia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(blank=True, choices=[('N', 'National'), ('E', 'Exterior')], default='N', max_length=2, null=True)),
                ('via_type', models.CharField(choices=[('AU', 'Freeway'), ('AV', 'Avenue'), ('AC', 'Avenue Street'), ('AK', 'Avenue Carrera'), ('BL', 'Boulevard'), ('CL', 'Street'), ('KR', 'Carrera'), ('CT', 'Highway'), ('CQ', 'Peripheral'), ('CV', 'Encircle'), ('DG', 'Diagonal'), ('PJ', 'Passage'), ('PS', 'Walk'), ('PT', 'Pedestrian'), ('TV', 'Transversal'), ('TC', 'Trunk'), ('VT', 'Variant'), ('VI', 'Vía')], help_text='Tipe of via, ej: Avenida', max_length=2)),
                ('main_via', models.CharField(help_text='Number or name common main via, ej: Esperanza', max_length=30, verbose_name='Número/Nombre')),
                ('letter_main_via', models.CharField(blank=True, help_text='Letters assosiated to the main via', max_length=3, null=True)),
                ('quadrant_main_via', models.CharField(blank=True, choices=[('S', 'South'), ('N', 'North'), ('E', 'East'), ('W', 'West')], help_text='(North, South, East, West)', max_length=1, null=True)),
                ('generator_via', models.CharField(help_text='Number or common generator via name, eg: 62', max_length=30)),
                ('letter_generator_via', models.CharField(blank=True, help_text='Letters assosiated to the generator via', max_length=3, null=True)),
                ('prefix_generator_via', models.CharField(blank=True, choices=[('B', 'BIS')], help_text='Via generator sufix, eg: Bis', max_length=1, null=True, verbose_name='Prefix')),
                ('prefix_letter_generator_via', models.CharField(blank=True, help_text='Letter that accompanies the suffix', max_length=3, null=True)),
                ('number_plate', models.CharField(help_text='Plate, eg: 49', max_length=2)),
                ('quadrant_generator_via', models.CharField(blank=True, choices=[('S', 'South'), ('N', 'North'), ('E', 'East'), ('W', 'West')], help_text='(North, South, East, West)', max_length=1, null=True, verbose_name='Quadrant')),
                ('complement', models.CharField(blank=True, choices=[('AD', 'ADMINISTRATION'), ('AG', 'AGRUPATION'), ('AL', 'LOFT'), ('AP', 'APARTAMENT'), ('BR', 'NEIGHBORHOOD'), ('BQ', 'BLOCK'), ('BG', 'CELLAR'), ('CS', 'HOUSE'), ('CU', 'CELL'), ('CE', 'MALL'), ('CD', 'CITADEL'), ('CO', 'RESIDENTIAL'), ('CN', 'CONSULTING_ROOM'), ('DP', 'DEPOSIT'), ('DS', 'BASEMENT_DEPOSIT'), ('ED', 'BUILDING'), ('EN', 'ENTRANCE'), ('EQ', 'CORNER'), ('ES', 'STATION'), ('ET', 'STAGE'), ('EX', 'EXTERIOR'), ('FI', 'ESTATE'), ('GA', 'GARAGE'), ('GS', 'BASEMENT_GARAGE'), ('IN', 'INTERIOR'), ('KM', 'KILOMETER'), ('LC', 'LOCAL'), ('LM', 'MEZZANINE_LOCAL'), ('LT', 'LOT'), ('MZ', 'APPlE'), ('MN', 'MEZZANINE'), ('MD', 'MODULE'), ('OF', 'OFFICE'), ('PQ', 'PARK'), ('PA', 'PARKING_LOT'), ('PN', 'PENT_HOUSE'), ('PI', 'FLOOR'), ('PL', 'LEVEL'), ('PR', 'PORTERIA'), ('PD', 'PREDIO'), ('PU', 'POST'), ('RP', 'ROUND POINT'), ('SC', 'SECTOR'), ('SS', 'SEMISOTANO'), ('SO', 'BASEMENT'), ('ST', 'SUITE'), ('SM', 'SUPERMANZANA'), ('TZ', 'TERRACE'), ('TO', 'TOWER'), ('UN', 'UNIT'), ('UL', 'RESIDENCIAL_UNIT'), ('UR', 'URBANIZATION'), ('ZN', 'ZONE')], max_length=2, null=True)),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.Department')),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.Municipality')),
            ],
            options={
                'verbose_name_plural': 'Addresses in Colombia',
            },
        ),
        migrations.AddField(
            model_name='phone',
            name='third_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.ThirdParty'),
        ),
        migrations.AddField(
            model_name='phone',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_phone_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='machineoperator',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.Operator'),
        ),
        migrations.AddField(
            model_name='historicalphone',
            name='third_part',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setup.ThirdParty'),
        ),
        migrations.AddField(
            model_name='historicalphone',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalemail',
            name='third_party',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setup.ThirdParty'),
        ),
        migrations.AddField(
            model_name='historicalemail',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='email',
            name='third_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.ThirdParty'),
        ),
        migrations.AddField(
            model_name='email',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_email_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='operator',
            unique_together=set([('identification_type', 'identification', 'user')]),
        ),
    ]
